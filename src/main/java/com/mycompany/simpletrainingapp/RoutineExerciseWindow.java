/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.simpletrainingapp;

import com.mycompany.simpletrainingapp.embeddable.RepRange;
import com.mycompany.simpletrainingapp.entities.Exercise;
import com.mycompany.simpletrainingapp.entities.Muscle;
import com.mycompany.simpletrainingapp.entities.MuscleGroup;
import com.mycompany.simpletrainingapp.entities.Routine;
import com.mycompany.simpletrainingapp.repositories.MuscleGroupRepository;
import com.mycompany.simpletrainingapp.repositories.RoutineRepository;
import java.awt.event.ItemEvent;
import java.time.DayOfWeek;
import java.util.List;
import java.util.Set;
import javax.swing.JFrame;

/**
 *
 * @author papar
 */
public class RoutineExerciseWindow extends javax.swing.JFrame {
    
    private Routine routine;
    private JFrame parent;
    private RoutinePanel parentPanel;
    private List<MuscleGroup> muscleGroups;
    private Set<Muscle> muscles;
    private MuscleGroup selectedMuscleGroup;
    private Muscle selectedMuscle;
    private DayOfWeek selectedDay;

    /**
     * Creates new form RoutineExerciseWindow
     * @param routine
     * @param selectedDay
     * @param parent
     */
    public RoutineExerciseWindow(Routine routine, DayOfWeek selectedDay, JFrame parent, RoutinePanel parentPanel) {
        this.parentPanel = parentPanel;
        this.selectedDay = selectedDay;
        this.parent = parent;
        this.routine = routine;
        this.selectedMuscle = null;
        this.selectedMuscleGroup = null;
        initComponents();
        loadMuscleGroups();
    }
    
    private void loadMuscleGroups(){
        var mgr = new MuscleGroupRepository();
        this.muscleGroups = mgr.getMuscleGroups();
        this.muscleGroups.forEach(mg -> muscleGroupsCombo.addItem(mg.getName()));
    }
    
    private void loadMuscleGroupMuscles(String name){
        this.selectedMuscleGroup = 
                muscleGroups
                        .stream()
                        .filter(mg -> mg.getName().equals(name))
                        .findAny()
                        .get();
        this.muscles = this.selectedMuscleGroup.getMuscles();
        targetMusclesCombo.addItem("-");
        muscles.forEach(m -> targetMusclesCombo.addItem(m.getName()));
    }
    
    private void loadMuscleGroupExercises(String name){
        this.selectedMuscle = null;
        this.selectedMuscleGroup
                .getTargetedExercises()
                .forEach(e -> exercisesCombo.addItem(e.getName()));
    }
    
    private void loadTargetMuscleData(String name){
        this.selectedMuscle = 
                muscles
                    .stream()
                    .filter(m -> m.getName().equals(name))
                    .findAny()
                    .get();
        this.selectedMuscle
                .getTargetedExercises()
                .forEach(e -> exercisesCombo.addItem(e.getName()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        muscleGroupsCombo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        targetMusclesCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        exercisesCombo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        setsNumberSpinner = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        minRepRangeSpinner = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        maxRepRangeSpinner = new javax.swing.JSpinner();
        cancelButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Muscle group");

        muscleGroupsCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                muscleGroupsComboItemStateChanged(evt);
            }
        });

        jLabel2.setText("Target muscle (Optional)");

        targetMusclesCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        targetMusclesCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                targetMusclesComboItemStateChanged(evt);
            }
        });

        jLabel3.setText("Exercise");

        jLabel4.setText("Number of sets");

        setsNumberSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel5.setText("Rep range");

        minRepRangeSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("-");

        maxRepRangeSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        cancelButton.setBackground(new java.awt.Color(204, 204, 204));
        cancelButton.setForeground(new java.awt.Color(0, 137, 173));
        cancelButton.setText("Cancel");
        cancelButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(45, 45, 255));
        addButton.setForeground(new java.awt.Color(232, 232, 232));
        addButton.setText("Add");
        addButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(minRepRangeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addGap(10, 10, 10)
                        .addComponent(maxRepRangeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(muscleGroupsCombo, 0, 150, Short.MAX_VALUE)
                        .addComponent(targetMusclesCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exercisesCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(setsNumberSpinner))
                    .addComponent(cancelButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(muscleGroupsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(targetMusclesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(exercisesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(setsNumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(minRepRangeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(maxRepRangeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.parent.setEnabled(true);
    }//GEN-LAST:event_formWindowClosing

    private void targetMusclesComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_targetMusclesComboItemStateChanged
        if(evt.getStateChange() != ItemEvent.SELECTED) return;
        var selectedMuscleName = (String) evt.getItem();
        exercisesCombo.removeAllItems();
        if(!selectedMuscleName.equals("-")){
            loadTargetMuscleData(selectedMuscleName);
        }else{
            var selectedMuscleGroupName = (String) muscleGroupsCombo.getSelectedItem();
            loadMuscleGroupExercises(selectedMuscleGroupName);
        }
    }//GEN-LAST:event_targetMusclesComboItemStateChanged

    private void muscleGroupsComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_muscleGroupsComboItemStateChanged
        if(evt.getStateChange() != ItemEvent.SELECTED) return;
        var selectedMuscleGroupName = (String) evt.getItem();
        exercisesCombo.removeAllItems();
        targetMusclesCombo.removeAllItems();
        loadMuscleGroupMuscles(selectedMuscleGroupName);
    }//GEN-LAST:event_muscleGroupsComboItemStateChanged

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.parent.setEnabled(true);
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        var selectedExerciseName = (String) exercisesCombo.getSelectedItem();
        if(selectedExerciseName == null) return;
        Set<Exercise> exercises;
        if(selectedMuscle != null) exercises = selectedMuscle.getTargetedExercises();
        else exercises = selectedMuscleGroup.getTargetedExercises();
        Exercise selectedExercise = 
                exercises
                    .stream()
                    .filter(m -> m.getName().equals(selectedExerciseName))
                    .findAny()
                    .get();
        var numberOfSets = (int) setsNumberSpinner.getValue();
        var minReps = (int) minRepRangeSpinner.getValue();
        var maxReps = (int) maxRepRangeSpinner.getValue();
        var repRange = new RepRange(minReps, maxReps);
        routine.addExercise(
                selectedExercise, 
                repRange, 
                1, 
                numberOfSets, 
                this.selectedDay
        );
        var routineRepository = new RoutineRepository();
        routineRepository.saveRoutine(routine);
        this.parentPanel.refresh();
        this.parent.setEnabled(true);
        this.dispose();
    }//GEN-LAST:event_addButtonActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> exercisesCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSpinner maxRepRangeSpinner;
    private javax.swing.JSpinner minRepRangeSpinner;
    private javax.swing.JComboBox<String> muscleGroupsCombo;
    private javax.swing.JSpinner setsNumberSpinner;
    private javax.swing.JComboBox<String> targetMusclesCombo;
    // End of variables declaration//GEN-END:variables
}
